networks:
  loki:

volumes:
  prometheus:
  grafana:
  loki:

services:
  # Since the Loki containers are running as user 10001 and the mounted data volume is owned by root,
  # Loki would not have permissions to create the directories.
  # Therefore the init container changes permissions of the mounted directory.
  init:
    image: &lokiImage grafana/loki:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/loki"
    volumes:
      - ./loki:/loki
    networks:
      - loki

  grafana:
    image: grafana/grafana:12.2.0
    ports:
      - "3300:3000"
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "false"
      GF_AUTH_DISABLE_LOGIN_FORM: "false"
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "admin"
    volumes:
      - ./config/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana:/var/lib/grafana
    networks:
      - loki

  prometheus:
    image: prom/prometheus:v3.6.0
    ports:
      - 9090
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    command:
      [
        '--log.level=debug',
        '--config.file=/etc/prometheus/prometheus.yml',
        '--enable-feature=remote-write-receiver',
        '--query.lookback-delta=30s'
      ]
    networks:
      - loki

  # for testing purposes only, disable in production
  log-generator:
    image: mingrammer/flog
    command:
      - --loop
      - --format=json
      - --number=10 # number of log lines to generate per second
      - --delay=100ms # delay between log lines
      - --output=/var/log/generated-logs.txt
      - --overwrite
      - --type=log
    volumes:
      - ./loki/:/var/log/

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./loki/:/var/log/
      - ./config:/etc/promtail/
      - ./data/promtail:/var/lib/promtail
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro  # 添加Docker socket
      # CRS 文件日志目录（宿主机路径）只读挂载，便于 promtail 读取
      - /opt/aicoding/crs/logs:/opt/aicoding/crs/logs:ro
    ports:
      - "9080:9080"
    command: -config.file=/etc/promtail/promtail-docker.yaml
    networks:
      - loki

  minio:
    image: minio/minio
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler &&
        # Use standard S3 port 9000 inside container to match Loki endpoint
        minio server --address "0.0.0.0:9000" --console-address "0.0.0.0:9001" /data
    environment:
      - MINIO_ROOT_USER=loki
      - MINIO_ROOT_PASSWORD=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    ports:
      - "9003:9000"  # host 9003 -> container 9000 (Loki uses 9000 inside)
      - "9001:9001"
    volumes:
      - ./.data/minio:/data
    networks:
      - loki

  loki-gateway:
    image: nginx:latest
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
      - "3100:3100"
    networks:
      - loki

  loki-read:
    image: *lokiImage
    volumes:
      - ./config:/etc/loki/
    # only needed for interactive debugging with dlv
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - apparmor=unconfined
    # internal only; do not publish random host ports
    # uncomment to use interactive debugging
    # - "40000-40002:40000" # makes the replicas available on ports 40000, 40001, 40002
    command: "-config.file=/etc/loki/loki.yaml -target=read -legacy-read-mode=false"
    networks:
      - loki
    restart: always
    mem_limit: 1g
    mem_reservation: 512m
    deploy:
      mode: replicated
      replicas: 1

  loki-write:
    image: *lokiImage
    volumes:
      - ./config:/etc/loki/
    # only needed for interactive debugging with dlv
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - apparmor=unconfined
    # internal only; do not publish random host ports
    # uncomment to use interactive debugging
    # - "50000-50002:40000" #  makes the replicas available on ports 50000, 50001, 50002
    command: "-config.file=/etc/loki/loki.yaml -target=write"
    networks:
      - loki
    restart: always
    mem_limit: 1g
    mem_reservation: 512m
    deploy:
      mode: replicated
      replicas: 1

  loki-backend:
    image: *lokiImage
    volumes:
      - ./config:/etc/loki/
      - ./rules:/loki/rules:ro
    # only needed for interactive debugging with dlv
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - apparmor=unconfined
    # internal only; do not publish random host ports
    # uncomment to use interactive debugging
    # - "60000-60002:40000" #  makes the replicas available on ports 60000, 60001, 60002
    command: "-config.file=/etc/loki/loki.yaml -target=backend -legacy-read-mode=false"
    networks:
      - loki
    restart: always
    mem_limit: 1g
    mem_reservation: 512m
    deploy:
      mode: replicated
      replicas: 1
